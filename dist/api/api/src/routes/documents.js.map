{
  "version": 3,
  "sources": ["../../../../../api/src/routes/documents.js"],
  "sourcesContent": ["'use strict';\n\nconst express = require('express');\nconst fs = require('fs');\nconst path = require('path');\nconst multer = require('multer');\nconst Document = require('../models/Document');\nconst { auth } = require('../middleware/auth');\n\nconst router = express.Router();\n\n// Ensure uploads directory exists\nconst uploadsDir = path.resolve(__dirname, '../../uploads');\nfs.mkdirSync(uploadsDir, { recursive: true });\n\nconst storage = multer.diskStorage({\n  destination: (_req, _file, cb) => cb(null, uploadsDir),\n  filename: (_req, file, cb) => {\n    const ts = Date.now();\n    const safe = file.originalname.replace(/[^a-zA-Z0-9_.-]+/g, '_');\n    cb(null, `${ts}-${safe}`);\n  },\n});\n\nconst allowed = new Set([\n  'image/jpeg',\n  'image/png',\n  'application/pdf',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n]);\n\nfunction fileFilter(_req, file, cb) {\n  if (allowed.has(file.mimetype)) cb(null, true);\n  else cb(new Error('Unsupported file type'), false);\n}\n\nconst upload = multer({ storage, fileFilter, limits: { fileSize: 25 * 1024 * 1024 } });\n\n// List with optional filters: ?category=..&from=YYYY-MM-DD&to=YYYY-MM-DD\nrouter.get('/', auth, async (req, res) => {\n  const { category, from, to } = req.query || {};\n  const filter = {};\n  if (category) filter.category = String(category);\n  if (from || to) {\n    filter.createdAt = {};\n    if (from) filter.createdAt.$gte = new Date(String(from));\n    if (to) {\n      const end = new Date(String(to));\n      // include entire day\n      end.setHours(23, 59, 59, 999);\n      filter.createdAt.$lte = end;\n    }\n  }\n  const docs = await Document.find(filter).sort({ createdAt: -1 });\n  res.json(docs);\n});\n\n// Create + upload\nrouter.post('/', auth, upload.single('file'), async (req, res) => {\n  const { title, description, category } = req.body;\n  if (!req.file) return res.status(400).json({ error: 'File is required' });\n  const doc = await Document.create({\n    title,\n    description,\n    category,\n    fileName: req.file.originalname,\n    mimeType: req.file.mimetype,\n    size: req.file.size,\n    path: req.file.filename,\n    ownerEmail: req.user?.email,\n  });\n  res.status(201).json(doc);\n});\n\n// Update metadata or replace file\nrouter.put('/:id', auth, upload.single('file'), async (req, res) => {\n  const { id } = req.params;\n  const { title, description, category } = req.body;\n\n  const doc = await Document.findById(id);\n  if (!doc) return res.status(404).json({ error: 'Not found' });\n\n  if (typeof title === 'string' && title) doc.title = title;\n  if (typeof description !== 'undefined') doc.description = description;\n  if (typeof category !== 'undefined') doc.category = category;\n\n  if (req.file) {\n    try { fs.unlinkSync(path.join(uploadsDir, doc.path)); } catch {}\n    doc.fileName = req.file.originalname;\n    doc.mimeType = req.file.mimetype;\n    doc.size = req.file.size;\n    doc.path = req.file.filename;\n  }\n\n  await doc.save();\n  res.json(doc);\n});\n\n// Delete\nrouter.delete('/:id', auth, async (req, res) => {\n  const { id } = req.params;\n  const doc = await Document.findByIdAndDelete(id);\n  if (!doc) return res.status(404).json({ error: 'Not found' });\n  // remove file best-effort\n  try { fs.unlinkSync(path.join(uploadsDir, doc.path)); } catch {}\n  res.json({ ok: true });\n});\n\n// Download\nrouter.get('/:id/file', auth, async (req, res) => {\n  const { id } = req.params;\n  const doc = await Document.findById(id);\n  if (!doc) return res.status(404).json({ error: 'Not found' });\n  const filePath = path.join(uploadsDir, doc.path);\n  if (!fs.existsSync(filePath)) return res.status(404).json({ error: 'File missing' });\n  res.setHeader('Content-Type', doc.mimeType);\n  res.setHeader('Content-Disposition', `inline; filename=\"${doc.fileName.replace(/\"/g, '')}\"`);\n  fs.createReadStream(filePath).pipe(res);\n});\n\nmodule.exports = router;\n\n"],
  "mappings": "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",
  "names": []
}
