{
  "version": 3,
  "sources": ["../../../../../api/src/routes/auth.js"],
  "sourcesContent": ["'use strict';\n\nconst express = require('express');\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\nconst Admin = require('../models/Admin');\n\nconst router = express.Router();\n\nfunction signToken(admin) {\n  const secret = process.env.JWT_SECRET || 'dev-secret-change-me';\n  const payload = { sub: String(admin._id), role: 'admin', email: admin.email };\n  return jwt.sign(payload, secret, { algorithm: 'HS256', expiresIn: '1d' });\n}\n\nrouter.post('/login', async (req, res) => {\n  try {\n    const { email, password } = req.body || {};\n    if (!email || !password) {\n      return res.status(400).json({ error: 'Email and password are required' });\n    }\n    const admin = await Admin.findOne({ email: String(email).toLowerCase().trim() });\n    if (!admin) return res.status(401).json({ error: 'Invalid credentials' });\n\n    const ok = await bcrypt.compare(password, admin.passwordHash);\n    if (!ok) return res.status(401).json({ error: 'Invalid credentials' });\n\n    const token = signToken(admin);\n    return res.json({ token, user: { email: admin.email, role: admin.role } });\n  } catch (err) {\n    console.error('Login error', err);\n    return res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\nrouter.get('/me', (req, res) => {\n  try {\n    const auth = req.headers.authorization || '';\n    const token = auth.startsWith('Bearer ') ? auth.slice(7) : null;\n    if (!token) return res.status(401).json({ error: 'Missing token' });\n    const payload = jwt.verify(token, process.env.JWT_SECRET || 'dev-secret-change-me');\n    return res.json({ user: { email: payload.email, role: payload.role } });\n  } catch (err) {\n    return res.status(401).json({ error: 'Invalid token' });\n  }\n});\n\nmodule.exports = router;\n\n"],
  "mappings": ";AAEA,MAAM,UAAU,QAAQ,SAAS;AACjC,MAAM,MAAM,QAAQ,cAAc;AAClC,MAAM,SAAS,QAAQ,UAAU;AACjC,MAAM,QAAQ,QAAQ,iBAAiB;AAEvC,MAAM,SAAS,QAAQ,OAAO;AAE9B,SAAS,UAAU,OAAO;AACxB,QAAM,SAAS,QAAQ,IAAI,cAAc;AACzC,QAAM,UAAU,EAAE,KAAK,OAAO,MAAM,GAAG,GAAG,MAAM,SAAS,OAAO,MAAM,MAAM;AAC5E,SAAO,IAAI,KAAK,SAAS,QAAQ,EAAE,WAAW,SAAS,WAAW,KAAK,CAAC;AAC1E;AAEA,OAAO,KAAK,UAAU,OAAO,KAAK,QAAQ;AACxC,MAAI;AACF,UAAM,EAAE,OAAO,SAAS,IAAI,IAAI,QAAQ,CAAC;AACzC,QAAI,CAAC,SAAS,CAAC,UAAU;AACvB,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,kCAAkC,CAAC;AAAA,IAC1E;AACA,UAAM,QAAQ,MAAM,MAAM,QAAQ,EAAE,OAAO,OAAO,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC;AAC/E,QAAI,CAAC;AAAO,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,sBAAsB,CAAC;AAExE,UAAM,KAAK,MAAM,OAAO,QAAQ,UAAU,MAAM,YAAY;AAC5D,QAAI,CAAC;AAAI,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,sBAAsB,CAAC;AAErE,UAAM,QAAQ,UAAU,KAAK;AAC7B,WAAO,IAAI,KAAK,EAAE,OAAO,MAAM,EAAE,OAAO,MAAM,OAAO,MAAM,MAAM,KAAK,EAAE,CAAC;AAAA,EAC3E,SAAS,KAAK;AACZ,YAAQ,MAAM,eAAe,GAAG;AAChC,WAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,wBAAwB,CAAC;AAAA,EAChE;AACF,CAAC;AAED,OAAO,IAAI,OAAO,CAAC,KAAK,QAAQ;AAC9B,MAAI;AACF,UAAM,OAAO,IAAI,QAAQ,iBAAiB;AAC1C,UAAM,QAAQ,KAAK,WAAW,SAAS,IAAI,KAAK,MAAM,CAAC,IAAI;AAC3D,QAAI,CAAC;AAAO,aAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,gBAAgB,CAAC;AAClE,UAAM,UAAU,IAAI,OAAO,OAAO,QAAQ,IAAI,cAAc,sBAAsB;AAClF,WAAO,IAAI,KAAK,EAAE,MAAM,EAAE,OAAO,QAAQ,OAAO,MAAM,QAAQ,KAAK,EAAE,CAAC;AAAA,EACxE,SAAS,KAAK;AACZ,WAAO,IAAI,OAAO,GAAG,EAAE,KAAK,EAAE,OAAO,gBAAgB,CAAC;AAAA,EACxD;AACF,CAAC;AAED,OAAO,UAAU;",
  "names": []
}
